{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diego Suescun\\\\Documents\\\\PROGRAMACION WEB\\\\PI\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\post\\\\postGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getAllGames, getAllGenres, postGame } from \"../../redux/actions\";\nimport styles from \"./postGame.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostNGame(props) {\n  _s();\n  const dispatch = useDispatch();\n  const local = useNavigate();\n  let platforms = [\"PS4\", \"PS5\", \"PC\", \"SEGA\", \"NINTENDO 64\", \"NINTENDO SWITCH\", \"ATARI\", \"XBOX ONE\", \"XBOX X\", \"GAME BOY ADVANCED\"];\n  const genres = useSelector(state => state.genres);\n  const [form, setForm] = useState({\n    name: '',\n    description: '',\n    platforms: [],\n    released: '',\n    rating: 0,\n    genres: [],\n    background_image: ''\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    description: '',\n    platforms: [],\n    released: '',\n    rating: 0,\n    genres: [],\n    background_image: ''\n  });\n  useEffect(() => {\n    if (!genres.length) {\n      dispatch(getAllGenres());\n    }\n  }, [dispatch, genres]);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log('este es el name', event.target.name);\n    console.log('este es el value', event.target.value);\n    setForm({\n      ...form,\n      [name]: value\n    });\n    if (!errors.length) {\n      return setErrors({\n        [name]: ''\n      });\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (form.name.trim() === '' || form.name > 10) {\n      return setErrors({\n        ...errors,\n        name: 'This field is not valid'\n      });\n    } else if (!/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|png|gif)/g.test(form.background_image)) {\n      return setErrors({\n        ...errors,\n        background_image: 'Please enter a valid URL'\n      });\n    } else if (form.description.trim() === '') {\n      return setErrors({\n        ...errors,\n        description: 'The description is not vaild'\n      });\n    } else if (form.released === '') {\n      return setErrors({\n        ...errors,\n        released: 'The released is not vaild'\n      });\n    } else if (form.rating === 0) {\n      return setErrors({\n        ...errors,\n        rating: 'The rating is not vaild'\n      });\n    } else if (form.rating > 5) {\n      return setErrors({\n        ...errors,\n        rating: 'The rating cannot be higher than 5'\n      });\n    } else if (form.platforms.length === 0 || form.platforms.length > 5) {\n      return setErrors({\n        ...errors,\n        platforms: ' The platforms number is not vaild, must be between 1 and 5'\n      });\n    } else if (form.genres.length === 0) {\n      return setErrors({\n        ...errors,\n        genres: 'The genres number is not vaild'\n      });\n    } else {\n      dispatch(postGame(form));\n      dispatch(getAllGames());\n      local('/home');\n    }\n  };\n  const handleReset = event => {\n    event.preventDefault();\n    setForm({\n      name: '',\n      description: '',\n      platforms: [],\n      released: '',\n      rating: 0,\n      genres: [],\n      background_image: ''\n    });\n    document.getElementById('platforms').reset();\n  };\n  const handleClickGen = event => {\n    if (event.target.checked) {\n      setForm({\n        ...form,\n        genres: [...form.genres, event.target.value]\n      });\n    } else {\n      setForm({\n        ...form,\n        genres: form.genres.filter(genre => genre.name !== event.target.value)\n      });\n    }\n  };\n  const handleClickPla = event => {\n    if (event.target.checked) {\n      setForm({\n        ...form,\n        platforms: [...form.platforms, event.target.value]\n      });\n    } else {\n      setForm({\n        ...form,\n        platforms: form.platforms.filter(platform => platform !== event.target.value)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    onReset: event => handleReset(event),\n    className: styles.contents,\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        className: styles.legend,\n        children: \"CREATE NEW GAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name \",\n          className: styles.labelName,\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: form.name,\n          name: \"name\",\n          onChange: event => handleChange(event),\n          className: styles.inputName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errors,\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: styles.labelImage,\n          children: \"Image: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"image\",\n          value: form.background_image,\n          name: \"background_image\",\n          onChange: event => handleChange(event),\n          className: styles.inputimage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errors,\n        children: errors.background_image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.containerDescription,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          className: styles.labelDescrip,\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          cols: \"30\",\n          rows: \"10\",\n          value: form.description,\n          name: \"description\",\n          onChange: event => handleChange(event),\n          className: styles.inputDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errors,\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.containPlat,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"platforms\",\n          className: styles.labelPlat,\n          children: \"Platforms: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), platforms === null || platforms === void 0 ? void 0 : platforms.sort().map(platform => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"platforms\",\n            className: styles.checkPlat,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: platform,\n              name: \"platform\",\n              onClick: event => handleClickPla(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"platform\",\n              children: platform\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errors,\n        children: errors.platforms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"released\",\n          className: styles.labelRele,\n          children: \"Released: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"realesed\",\n          value: form.released,\n          name: \"released\",\n          onChange: event => handleChange(event),\n          className: styles.inputRele\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errors,\n          children: errors.released\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rating\",\n          className: styles.labelRating,\n          children: \"Rating: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"numbre\",\n          id: \"rating\",\n          value: form.rating,\n          name: \"rating\",\n          onChange: event => handleChange(event),\n          className: styles.inputRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errors,\n        children: errors.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.containPlat,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"genres\",\n          className: styles.labelPlat,\n          children: \"Genres:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this), genres.sort((a, b) => a.name > b.name ? 1 : -1).length ? genres.map(genre => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.checkPlat,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: genre.name,\n              children: genre.name\n            }, genre.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: genre.name,\n              value: genre.name,\n              onClick: event => handleClickGen(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errors,\n          children: errors.genres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.conytainButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Game\",\n        className: styles.buttonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"reset\",\n        value: \"Reset Form\",\n        className: styles.buttonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n// export default function PostNGame(props){\n//     /* ------------ESTADOS Y USEEFFECT----------------- */\n//     const [ form, setForm ] = useState({\n//         name: '',\n//         background_image: '',\n//         description:'',\n//         platforms: [],\n//         released: '',\n//         rating: 0,\n//         genres: []\n//     });\n\n//     const [errors, setErrors] = useState({\n//         name: '',\n//         background_image: '',\n//         description:'',\n//         platforms: [],\n//         released: '',\n//         rating: 0,\n//         genres: []\n//     })\n\n//     let platforms = [\"PS4\", \"PS5\", \"PC\", \"SEGA\", \"NINTENDO 64\", \"NINTENDO SWITCH\", \"ATARI\", \"XBOX ONE\", \"XBOX X\", \"GAME BOY ADVANCED\"];\n\n//     const dispatch = useDispatch();\n//     const navigate = useNavigate();\n//     const genres = useSelector((state) => state.genres);\n\n//     useEffect(() => {\n//         if (!genres.length) {\n//             dispatch(getAllGenres());\n//         }\n//     },[dispatch, genres]);\n\n//     /* -----------------HANDLERS---------------- */\n//     const handleChange = (event) => {\n//         const property = event.target.name;\n//         const value = event.target.value;\n//         setForm({ ...form, [property]: value });\n\n//         if(!errors.length){\n//            return setErrors({[property]:''}); \n//         }\n\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         if (form.name.trim() === '' || form.name > 10) {\n//             return setErrors({...errors, name: 'Please fill this field'});    \n//         } else if (!/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|png|gif)/g.test(form.background_image)) {\n//             return setErrors({ ...errors,  background_image:'Please put a valid url for a image' });\n//         } else if (form.description.trim() === '') {\n//             return setErrors({ ...errors,  description:'Please enter a description' });\n//         } else if (form.released === '') {\n//             return setErrors({ ...errors,  released: 'Please enter a released date' });\n//         } else if (form.rating === 0 ) {\n//             return setErrors({ ...errors,  rating:'Please put a rating' });\n//         } else if (form.rating > 5 ) {\n//             return setErrors({ ...errors,   rating:'Please put a rating bethween 1 and 5' });\n//         } else if(form.platforms.length === 0 || form.platforms.length > 5 ){\n//             return setErrors({ ...errors, platforms:'Please put platforms bethween 1 and 5'});\n//         } else if(form.genres.length === 0 || form.genres.length > 4 ){\n//             return setErrors({ ...errors,  genres:'Please put a genres bethween 1 and 5'});\n//         } else {\n//             dispatch(postGame(form));\n//             navigate('/home');\n\n//         }\n//     };\n\n//     const handleReset = (event) => {\n//         event.preventDefault();\n//         setForm({\n//             name: '',\n//             background_image: '',\n//             description:'',\n//             platforms: [],\n//             released: '',\n//             rating: 0,\n//             genres: []\n//         });\n//         document.getElementById(\"platforms\").reset();\n//     };\n\n//     const handleClickG = (event) => {\n//         if (event.target.checked) {\n//             setForm({ ...form, genres: [...form.genres, event.target.value] });\n//         } else {\n//             setForm({ ...form, genres: form.genres.filter((gen) => gen.name !== event.target.value)});\n//         }   \n//     };\n\n//     const handleClickP = (event) => {\n//         if (event.target.checked) {\n//             setForm({ ...form, platforms: [...form.platforms, event.target.value] });\n//         } \n//          else{\n//             setForm({ ...form, platforms: form.platforms.filter((platform) => platform !== event.target.value) });\n//         }   \n//     };\n\n//   return (\n\n//     <form onSubmit={(event) => handleSubmit(event)} onReset={(event) => handleReset(event)} className={style.form}>\n//         <fieldset className={style.fieldset}>\n//             <legend className={style.legend}>Create a new Game</legend>\n\n//             <div className={style.container}>\n//               <input type=\"text\" id='name' value={form.name} name='name' onChange={(event) => handleChange(event)} className={style.inputtext}/>\n//               <label htmlFor=\"name\" className={style.labeltext}>Name: </label>\n//               <p className={style.error}>{errors.name}</p>\n//             </div>\n\n//             <div className={style.container}>\n//               <input type=\"text\" id='image' value={form.background_image} name='background_image' onChange={(event) => handleChange(event)} className={style.inputtext}/>\n//               <label htmlFor=\"image\" className={style.labeltext}>Image: </label>\n//               <p className={style.error}>{ errors.background_image}</p>\n//             </div>\n\n//             <div className={style.textareaContainer}>\n//                <label htmlFor=\"description\" className={style.label}>Description: </label>\n//                <textarea id=\"description\" cols=\"30\" rows=\"10\" value={form.description} name='description' onChange={(event) => handleChange(event)} className={style.textarea}/>\n//                <p className={style.error}>{errors.description}</p>\n//             </div>\n\n//             <div>\n//                 <label htmlFor=\"platforms\" className={style.labelCb}>Platforms: </label>\n//                 {\n//                     platforms?.sort().map((platform) => {\n//                         return(\n//                             <div id=\"platforms\" className={style.checkBox}>\n//                                 <input type=\"checkbox\" value={platform} name='platforms' onClick={(event) => handleClickP(event)} className={style.input}/>\n//                                 <label htmlFor=\"platform\" className={style.labelsPyG}>{platform}</label>\n//                             </div>\n//                         );\n//                     })\n//                 }\n//                 <p className={style.error}>{errors.platforms}</p>\n//             </div>\n\n//             <div>\n//                 <label htmlFor=\"released\" className={style.label}>Released: </label>\n//                <input type=\"date\" id=\"released\" value={form.released} name='released' onChange={(event) => handleChange(event)} className={style.input}/>\n//                <p className={style.error}>{ errors.released}</p>\n//             </div>\n\n//             <div>\n//                <label htmlFor=\"rating\" className={style.labelCb}>Rating: </label>\n//                <input type=\"number\" id=\"rating\" value={form.rating} name='rating' onChange={(event) => handleChange(event)} min='0' step='0.5' className={style.input}/>\n//                <p className={style.error}>{errors.rating}</p>\n//             </div>\n\n//             <div>\n//             <label htmlFor=\"genres\" className={style.labelCb}>Genres: </label>\n//                 {   genres.sort((a,b) => (a.name > b.name ? 1 : -1)).length ?\n//                     genres.map((genre) => {\n//                         return(\n//                             <div className={style.checkBox}>\n//                                 <label htmlFor={genre.name} key={genre.id} className={style.labelsPyG}>{genre.name}</label>\n//                                 <input type=\"checkbox\" id={genre.name} value={genre.name} onClick={(event) => handleClickG(event)}  className={style.input}/>\n\n//                             </div>\n//                         );\n//                     }) : <div className={style.hypnotic}></div>\n//                 }\n//                 <p className={style.error}>{errors.genres}</p>\n//             </div>\n\n//         </fieldset>\n//         <input type=\"submit\" value=\"Create Game\" className={style.buttons} />\n//         <input type=\"reset\" value=\"Reset Form\" className={style.buttons} />\n//     </form>\n//   );\n// };\n_s(PostNGame, \"azLj/31cqb3CsZFRBfAy0NB3GRE=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = PostNGame;\nvar _c;\n$RefreshReg$(_c, \"PostNGame\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","getAllGames","getAllGenres","postGame","styles","jsxDEV","_jsxDEV","PostNGame","props","_s","dispatch","local","platforms","genres","state","form","setForm","name","description","released","rating","background_image","errors","setErrors","length","handleChange","event","value","target","console","log","handleSubmit","preventDefault","trim","test","handleReset","document","getElementById","reset","handleClickGen","checked","filter","genre","handleClickPla","platform","onSubmit","onReset","className","contents","children","legend","fileName","_jsxFileName","lineNumber","columnNumber","container","htmlFor","labelName","type","id","onChange","inputName","labelImage","inputimage","containerDescription","labelDescrip","cols","rows","inputDesc","containPlat","labelPlat","sort","map","checkPlat","onClick","labelRele","inputRele","labelRating","inputRating","a","b","conytainButtons","buttonSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Diego Suescun/Documents/PROGRAMACION WEB/PI/PI-Videogames-main/client/src/components/post/postGame.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getAllGames, getAllGenres, postGame } from \"../../redux/actions\";\r\nimport styles from \"./postGame.module.css\";\r\n\r\n\r\nexport default function PostNGame(props){\r\n\r\n    const dispatch = useDispatch();\r\n    const local = useNavigate();\r\n    let platforms = [\"PS4\", \"PS5\", \"PC\", \"SEGA\", \"NINTENDO 64\", \"NINTENDO SWITCH\", \"ATARI\", \"XBOX ONE\", \"XBOX X\", \"GAME BOY ADVANCED\"];\r\n    const genres = useSelector((state) => state.genres);\r\n    \r\n    const [ form, setForm ] = useState({\r\n        name: '',\r\n        description: '',\r\n        platforms: [],\r\n        released: '',\r\n        rating: 0,\r\n        genres: [],\r\n        background_image: ''\r\n    });\r\n    \r\n    const [ errors, setErrors ] = useState({\r\n        name: '',\r\n        description: '',\r\n        platforms: [],\r\n        released: '',\r\n        rating: 0,\r\n        genres: [],\r\n        background_image: '' \r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        if(!genres.length){\r\n            dispatch(getAllGenres());\r\n        }\r\n    }, [dispatch, genres]);\r\n\r\n\r\n    const handleChange = (event) => {\r\n\r\n        const { name, value } = event.target;\r\n        console.log('este es el name', event.target.name);\r\n        console.log('este es el value', event.target.value);\r\n        setForm({\r\n            ...form,\r\n            [name]: value\r\n        })\r\n\r\n        if(!errors.length){\r\n            return setErrors({[name]:''})\r\n        }\r\n\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();      \r\n \r\n        if(form.name.trim() === '' || form.name > 10){\r\n            return setErrors( { ...errors, name: 'This field is not valid'})\r\n        }else if( !/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|png|gif)/g.test(form.background_image)){\r\n            return setErrors({...errors, background_image: 'Please enter a valid URL'})\r\n        }else if(form.description.trim() === ''){\r\n            return setErrors({...errors, description: 'The description is not vaild'})\r\n        }else if(form.released === ''){\r\n            return setErrors({...errors, released: 'The released is not vaild'})\r\n        }else if(form.rating === 0){\r\n            return setErrors({...errors, rating: 'The rating is not vaild'})\r\n        }else if(form.rating > 5){\r\n            return setErrors({...errors, rating: 'The rating cannot be higher than 5'})\r\n        }else if(form.platforms.length === 0 || form.platforms.length > 5 ){\r\n            return setErrors({...errors, platforms: ' The platforms number is not vaild, must be between 1 and 5'})\r\n        }else if(form.genres.length ===0){\r\n            return setErrors({...errors, genres: 'The genres number is not vaild'})\r\n        }else {\r\n            dispatch(postGame(form));\r\n            \r\n            dispatch(getAllGames());\r\n            local('/home');\r\n        }\r\n    };\r\n\r\n    const handleReset = (event) =>{\r\n        event.preventDefault();\r\n        setForm({\r\n            name: '',\r\n            description: '',\r\n            platforms: [],\r\n            released: '',\r\n            rating: 0,\r\n            genres: [],\r\n            background_image: '' \r\n        })\r\n        document.getElementById('platforms').reset();\r\n    };\r\n\r\n    const handleClickGen = (event) => {\r\n        if(event.target.checked){\r\n            setForm({\r\n                ...form,\r\n                genres: [...form.genres, event.target.value]\r\n            });\r\n        }else {\r\n            setForm({\r\n                ...form,\r\n                genres: form.genres.filter((genre) => genre.name !== event.target.value)\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    const handleClickPla = (event) => {\r\n        if(event.target.checked){\r\n            setForm({\r\n                ...form,\r\n                platforms:[...form.platforms, event.target.value]\r\n            })\r\n        }else{\r\n            setForm({\r\n                ...form,\r\n                platforms: form.platforms.filter((platform) => platform !== event.target.value)\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    return(\r\n        <form onSubmit={(event) => handleSubmit(event)} onReset={(event) => handleReset(event)} className={styles.contents}>\r\n            <fieldset>\r\n\r\n            <legend className={styles.legend}>CREATE NEW GAME</legend>\r\n\r\n            <div className={styles.container}>\r\n                <label htmlFor=\"name \" className={styles.labelName}>Name:</label>\r\n                <input type=\"text\" id=\"name\" value={form.name} name=\"name\" onChange={(event) => handleChange(event)} className={styles.inputName} />\r\n            </div>\r\n                <p className= {styles.errors}>{errors.name}</p>\r\n\r\n            <div className={styles.container}>\r\n                <label htmlFor=\"image\" className={styles.labelImage}>Image: </label>\r\n                <input type=\"text\" id=\"image\" value={form.background_image} name=\"background_image\" onChange={(event) => handleChange(event)} className={styles.inputimage}/>\r\n            </div>\r\n                <p className= {styles.errors}>{errors.background_image}</p>\r\n\r\n            <div className={styles.containerDescription}>\r\n                <label htmlFor=\"description\" className={styles.labelDescrip}>Description: </label>\r\n                <textarea  id=\"description\" cols=\"30\" rows=\"10\" value={form.description} name=\"description\" onChange={(event) => handleChange(event)} className={styles.inputDesc}/>\r\n                <p className= {styles.errors}>{errors.description}</p>\r\n            </div>\r\n\r\n            <div className={styles.containPlat}>\r\n                <label htmlFor=\"platforms\" className={styles.labelPlat}>Platforms: </label>\r\n                {\r\n                    platforms?.sort().map((platform) => {\r\n                        return(\r\n                            <div id=\"platforms\" className={styles.checkPlat}>\r\n                                <input type=\"checkbox\" value={platform} name=\"platform\" onClick={(event) => handleClickPla(event)} />\r\n                                <label htmlFor=\"platform\" >{platform}</label>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n                <p className= {styles.errors}>{errors.platforms}</p>\r\n            \r\n            <div className={styles.container}>\r\n                <label htmlFor=\"released\" className={styles.labelRele}>Released: </label>\r\n                <input type=\"date\" id=\"realesed\" value={form.released} name=\"released\" onChange={(event) => handleChange(event)} className={styles.inputRele} />\r\n                <p className= {styles.errors}>{errors.released}</p>\r\n            </div>\r\n\r\n            <div className={styles.container}>\r\n                <label htmlFor=\"rating\" className={styles.labelRating}>Rating: </label>\r\n                <input type=\"numbre\" id=\"rating\" value={form.rating} name=\"rating\" onChange={(event) => handleChange(event)} className={styles.inputRating}/>\r\n            </div>\r\n                <p className= {styles.errors}>{errors.rating}</p>\r\n\r\n            <div className={styles.containPlat}>\r\n                <label htmlFor=\"genres\" className={styles.labelPlat}>Genres:</label>\r\n                {\r\n                    genres.sort((a,b) => (a.name > b.name? 1 : -1)).length?\r\n                    genres.map((genre) =>{\r\n                        return(\r\n                            <div className={styles.checkPlat}>\r\n                                <label htmlFor={genre.name} key={genre.id} >{genre.name}</label>\r\n                                <input type=\"checkbox\" id={genre.name} value={genre.name} onClick={(event)=> handleClickGen(event)} />\r\n                            </div>\r\n                        )\r\n                    }):<div></div>\r\n                }\r\n                <p className= {styles.errors}>{errors.genres}</p>\r\n            </div>\r\n            </fieldset>\r\n            <div className={styles.conytainButtons}>\r\n                <input type=\"submit\" value=\"Create Game\" className={styles.buttonSubmit} />\r\n                <input type=\"reset\" value=\"Reset Form\" className={styles.buttonSubmit} />\r\n            </div>\r\n       </form>\r\n    )\r\n}\r\n\r\n// export default function PostNGame(props){\r\n//     /* ------------ESTADOS Y USEEFFECT----------------- */\r\n//     const [ form, setForm ] = useState({\r\n//         name: '',\r\n//         background_image: '',\r\n//         description:'',\r\n//         platforms: [],\r\n//         released: '',\r\n//         rating: 0,\r\n//         genres: []\r\n//     });\r\n\r\n//     const [errors, setErrors] = useState({\r\n//         name: '',\r\n//         background_image: '',\r\n//         description:'',\r\n//         platforms: [],\r\n//         released: '',\r\n//         rating: 0,\r\n//         genres: []\r\n//     })\r\n\r\n//     let platforms = [\"PS4\", \"PS5\", \"PC\", \"SEGA\", \"NINTENDO 64\", \"NINTENDO SWITCH\", \"ATARI\", \"XBOX ONE\", \"XBOX X\", \"GAME BOY ADVANCED\"];\r\n    \r\n//     const dispatch = useDispatch();\r\n//     const navigate = useNavigate();\r\n//     const genres = useSelector((state) => state.genres);\r\n\r\n  \r\n\r\n//     useEffect(() => {\r\n//         if (!genres.length) {\r\n//             dispatch(getAllGenres());\r\n//         }\r\n//     },[dispatch, genres]);\r\n    \r\n\r\n\r\n\r\n//     /* -----------------HANDLERS---------------- */\r\n//     const handleChange = (event) => {\r\n//         const property = event.target.name;\r\n//         const value = event.target.value;\r\n//         setForm({ ...form, [property]: value });\r\n        \r\n//         if(!errors.length){\r\n//            return setErrors({[property]:''}); \r\n//         }\r\n        \r\n        \r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n        \r\n//         if (form.name.trim() === '' || form.name > 10) {\r\n//             return setErrors({...errors, name: 'Please fill this field'});    \r\n//         } else if (!/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|png|gif)/g.test(form.background_image)) {\r\n//             return setErrors({ ...errors,  background_image:'Please put a valid url for a image' });\r\n//         } else if (form.description.trim() === '') {\r\n//             return setErrors({ ...errors,  description:'Please enter a description' });\r\n//         } else if (form.released === '') {\r\n//             return setErrors({ ...errors,  released: 'Please enter a released date' });\r\n//         } else if (form.rating === 0 ) {\r\n//             return setErrors({ ...errors,  rating:'Please put a rating' });\r\n//         } else if (form.rating > 5 ) {\r\n//             return setErrors({ ...errors,   rating:'Please put a rating bethween 1 and 5' });\r\n//         } else if(form.platforms.length === 0 || form.platforms.length > 5 ){\r\n//             return setErrors({ ...errors, platforms:'Please put platforms bethween 1 and 5'});\r\n//         } else if(form.genres.length === 0 || form.genres.length > 4 ){\r\n//             return setErrors({ ...errors,  genres:'Please put a genres bethween 1 and 5'});\r\n//         } else {\r\n//             dispatch(postGame(form));\r\n//             navigate('/home');\r\n\r\n//         }\r\n//     };\r\n    \r\n//     const handleReset = (event) => {\r\n//         event.preventDefault();\r\n//         setForm({\r\n//             name: '',\r\n//             background_image: '',\r\n//             description:'',\r\n//             platforms: [],\r\n//             released: '',\r\n//             rating: 0,\r\n//             genres: []\r\n//         });\r\n//         document.getElementById(\"platforms\").reset();\r\n//     };\r\n    \r\n//     const handleClickG = (event) => {\r\n//         if (event.target.checked) {\r\n//             setForm({ ...form, genres: [...form.genres, event.target.value] });\r\n//         } else {\r\n//             setForm({ ...form, genres: form.genres.filter((gen) => gen.name !== event.target.value)});\r\n//         }   \r\n//     };\r\n    \r\n//     const handleClickP = (event) => {\r\n//         if (event.target.checked) {\r\n//             setForm({ ...form, platforms: [...form.platforms, event.target.value] });\r\n//         } \r\n//          else{\r\n//             setForm({ ...form, platforms: form.platforms.filter((platform) => platform !== event.target.value) });\r\n//         }   \r\n//     };\r\n    \r\n\r\n//   return (\r\n    \r\n//     <form onSubmit={(event) => handleSubmit(event)} onReset={(event) => handleReset(event)} className={style.form}>\r\n//         <fieldset className={style.fieldset}>\r\n//             <legend className={style.legend}>Create a new Game</legend>\r\n\r\n//             <div className={style.container}>\r\n//               <input type=\"text\" id='name' value={form.name} name='name' onChange={(event) => handleChange(event)} className={style.inputtext}/>\r\n//               <label htmlFor=\"name\" className={style.labeltext}>Name: </label>\r\n//               <p className={style.error}>{errors.name}</p>\r\n//             </div>\r\n\r\n//             <div className={style.container}>\r\n//               <input type=\"text\" id='image' value={form.background_image} name='background_image' onChange={(event) => handleChange(event)} className={style.inputtext}/>\r\n//               <label htmlFor=\"image\" className={style.labeltext}>Image: </label>\r\n//               <p className={style.error}>{ errors.background_image}</p>\r\n//             </div>\r\n\r\n//             <div className={style.textareaContainer}>\r\n//                <label htmlFor=\"description\" className={style.label}>Description: </label>\r\n//                <textarea id=\"description\" cols=\"30\" rows=\"10\" value={form.description} name='description' onChange={(event) => handleChange(event)} className={style.textarea}/>\r\n//                <p className={style.error}>{errors.description}</p>\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label htmlFor=\"platforms\" className={style.labelCb}>Platforms: </label>\r\n//                 {\r\n//                     platforms?.sort().map((platform) => {\r\n//                         return(\r\n//                             <div id=\"platforms\" className={style.checkBox}>\r\n//                                 <input type=\"checkbox\" value={platform} name='platforms' onClick={(event) => handleClickP(event)} className={style.input}/>\r\n//                                 <label htmlFor=\"platform\" className={style.labelsPyG}>{platform}</label>\r\n//                             </div>\r\n//                         );\r\n//                     })\r\n//                 }\r\n//                 <p className={style.error}>{errors.platforms}</p>\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <label htmlFor=\"released\" className={style.label}>Released: </label>\r\n//                <input type=\"date\" id=\"released\" value={form.released} name='released' onChange={(event) => handleChange(event)} className={style.input}/>\r\n//                <p className={style.error}>{ errors.released}</p>\r\n//             </div>\r\n\r\n//             <div>\r\n//                <label htmlFor=\"rating\" className={style.labelCb}>Rating: </label>\r\n//                <input type=\"number\" id=\"rating\" value={form.rating} name='rating' onChange={(event) => handleChange(event)} min='0' step='0.5' className={style.input}/>\r\n//                <p className={style.error}>{errors.rating}</p>\r\n//             </div>\r\n\r\n//             <div>\r\n//             <label htmlFor=\"genres\" className={style.labelCb}>Genres: </label>\r\n//                 {   genres.sort((a,b) => (a.name > b.name ? 1 : -1)).length ?\r\n//                     genres.map((genre) => {\r\n//                         return(\r\n//                             <div className={style.checkBox}>\r\n//                                 <label htmlFor={genre.name} key={genre.id} className={style.labelsPyG}>{genre.name}</label>\r\n//                                 <input type=\"checkbox\" id={genre.name} value={genre.name} onClick={(event) => handleClickG(event)}  className={style.input}/>\r\n                                \r\n//                             </div>\r\n//                         );\r\n//                     }) : <div className={style.hypnotic}></div>\r\n//                 }\r\n//                 <p className={style.error}>{errors.genres}</p>\r\n//             </div>\r\n            \r\n//         </fieldset>\r\n//         <input type=\"submit\" value=\"Create Game\" className={style.buttons} />\r\n//         <input type=\"reset\" value=\"Reset Form\" className={style.buttons} />\r\n//     </form>\r\n//   );\r\n// };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}