{"ast":null,"code":"import { GET_GAMES, GET_GAME_NAME, POST_GAME, ERROR, GET_GENRES, GAME_DETAIL, CLEAR, ORDEN, RATING, CREATION, GENRES } from \"./types\";\nconst initialState = {\n  games: [],\n  allGames: [],\n  detail: [],\n  genres: [],\n  errors: {}\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case GET_GAME_NAME:\n      return {\n        ...state,\n        games: payload\n      };\n    case GET_GAMES:\n      return {\n        ...state,\n        games: payload,\n        allGames: payload\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: payload\n      };\n    case ERROR:\n      return {\n        ...state,\n        errors: payload\n      };\n    case GAME_DETAIL:\n      return {\n        ...state,\n        detail: payload\n      };\n    case CLEAR:\n      return {\n        ...state,\n        detail: []\n      };\n    case POST_GAME:\n      return {\n        ...state,\n        games: [...state.games, payload]\n      };\n    case ORDEN:\n      let index = payload === 'ASC' ? state.games.sort((a, b) => {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        return 0;\n      }) : state.games.sort((a, b) => {\n        if (a.name > b.name) return -1;\n        if (a.name < b.name) return 1;\n        return 0;\n      });\n      // console.log('Este es el state games ' ,state.games);\n      // console.log('Este es el index ' ,index);\n      return {\n        ...state,\n        games: index\n      };\n    case RATING:\n      let indexRating = payload === 'ASC' ? state.games.sort((a, b) => {\n        if (a.rating > b.rating) return 1;\n        if (a.rating < b.rating) return -1;\n        return 0;\n      }) : state.games.sort((a, b) => {\n        if (a.rating > b.rating) return -1;\n        if (a.rating < b.rating) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        games: indexRating\n      };\n    case CREATION:\n      const games = state.allGames;\n      const indexCreation = payload === 'Created' ? games.filter(game => game.createdInDb) : games;\n      return {\n        ...state,\n        games: indexCreation\n      };\n    case GENRES:\n      const gamesGenres = state.allGames;\n      const indexGenres = gamesGenres.filter(game => game.genres.includes(payload));\n      return {\n        ...state,\n        games: indexGenres\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}","map":{"version":3,"names":["GET_GAMES","GET_GAME_NAME","POST_GAME","ERROR","GET_GENRES","GAME_DETAIL","CLEAR","ORDEN","RATING","CREATION","GENRES","initialState","games","allGames","detail","genres","errors","reducer","state","arguments","length","undefined","type","payload","index","sort","a","b","name","indexRating","rating","indexCreation","filter","game","createdInDb","gamesGenres","indexGenres","includes"],"sources":["C:/Users/Diego Suescun/Documents/PROGRAMACION WEB/PI/PI-Videogames-main/client/src/redux/reducer.js"],"sourcesContent":["import { GET_GAMES, GET_GAME_NAME, POST_GAME, ERROR, GET_GENRES, GAME_DETAIL, CLEAR, ORDEN, RATING, CREATION, GENRES } from \"./types\";\r\n\r\nconst initialState = {\r\n    games: [],\r\n    allGames: [],\r\n    detail: [],\r\n    genres: [],\r\n    errors: {}\r\n}\r\n\r\nexport default function reducer (state = initialState, { type, payload}){\r\n    switch(type){\r\n\r\n        case GET_GAME_NAME:\r\n            return {\r\n                ...state,\r\n                games: payload\r\n            }\r\n        case GET_GAMES:\r\n            return{\r\n                ...state,\r\n                games: payload,\r\n                allGames: payload\r\n            }\r\n        case GET_GENRES:\r\n            return{\r\n                ...state,\r\n                genres: payload\r\n            }\r\n        case ERROR:\r\n            return{\r\n                ...state,\r\n                errors: payload\r\n            }\r\n        case GAME_DETAIL:\r\n            return{\r\n                ...state,\r\n                detail: payload\r\n            }\r\n        case CLEAR:\r\n            return{\r\n                ...state,\r\n                detail: []\r\n            }\r\n        case POST_GAME:\r\n            return{\r\n                ...state,\r\n                games: [...state.games, payload]\r\n            }\r\n        case ORDEN:\r\n            let index = payload === 'ASC'?\r\n            state.games.sort((a,b) => {\r\n                if(a.name > b.name)return 1;\r\n                if(a.name < b.name)return -1;\r\n                \r\n                return 0;\r\n            }): state.games.sort((a,b) => {\r\n                if(a.name > b.name) return -1;\r\n                if(a.name < b.name) return 1;\r\n\r\n                return 0;\r\n            })\r\n            // console.log('Este es el state games ' ,state.games);\r\n            // console.log('Este es el index ' ,index);\r\n            return{\r\n                ...state,\r\n                games: index\r\n            }\r\n        case RATING:\r\n            let indexRating = payload === 'ASC'?\r\n            state.games.sort((a,b) => {\r\n                if(a.rating > b.rating) return 1;\r\n                if(a.rating < b.rating) return -1;\r\n\r\n                return 0;\r\n            }): state.games.sort((a,b) => {\r\n                if(a.rating > b.rating) return -1;\r\n                if(a.rating < b.rating) return 1;\r\n\r\n                return 0;\r\n            })\r\n            return{\r\n                ...state,\r\n                games: indexRating\r\n            }\r\n        case CREATION:\r\n            const games = state.allGames;\r\n            const indexCreation = payload === 'Created'? games.filter((game) => game.createdInDb) : games;\r\n            return{\r\n                ...state,\r\n                games: indexCreation\r\n            }\r\n        case GENRES:\r\n            const gamesGenres = state.allGames;\r\n            const indexGenres = gamesGenres.filter((game) => game.genres.includes(payload));\r\n            return{\r\n                ...state,\r\n                games: indexGenres\r\n            }\r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}