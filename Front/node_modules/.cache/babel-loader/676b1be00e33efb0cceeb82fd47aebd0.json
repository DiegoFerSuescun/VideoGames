{"ast":null,"code":"import axios from 'axios';\nimport { ERROR, GET_GAMES, GET_GAME_NAME, POST_GAME, GAME_DETAIL, GET_GENRES, CLEAR, ORDEN, RATING, CREATION, GENRES } from './types';\nconst URL = 'http://localhost:3001';\nexport const searchByName = name => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(`${URL}/videogames?name=${name}`);\n      return dispatch({\n        type: GET_GAME_NAME,\n        payload: data\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const getAllGames = () => {\n  return async dispatch => {\n    try {\n      await axios.get(`${URL}/videogames`).then(response => {\n        return dispatch({\n          type: GET_GAMES,\n          payload: response.data\n        });\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const gameDetail = idVideogame => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`${URL}/videogames/${idVideogame}`);\n      const game = res.data;\n      return dispatch({\n        type: GAME_DETAIL,\n        payload: game\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const clear = () => {\n  return {\n    type: CLEAR\n  };\n};\nexport const postGame = game => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`${URL}/videogames`, game);\n      window.alert('Fue Creado exitosamente su game', form.name);\n      return dispatch({\n        type: POST_GAME,\n        payload: res\n      });\n    } catch (error) {\n      window.alert('No pudo ser creado su juego', game);\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const getAllGenres = () => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(`${URL}/genres`);\n      return dispatch({\n        type: GET_GENRES,\n        payload: data\n      });\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const ordenName = ordenByName => {\n  return {\n    type: ORDEN,\n    payload: ordenByName\n  };\n};\nexport const ordenRating = ordenByRating => {\n  return {\n    type: RATING,\n    payload: ordenByRating\n  };\n};\nexport const ordenCreation = ordenCreation => {\n  return {\n    type: CREATION,\n    payload: ordenCreation\n  };\n};\nexport const ordenGenres = ordenGenre => {\n  return {\n    type: GENRES,\n    payload: ordenGenre\n  };\n};","map":{"version":3,"names":["axios","ERROR","GET_GAMES","GET_GAME_NAME","POST_GAME","GAME_DETAIL","GET_GENRES","CLEAR","ORDEN","RATING","CREATION","GENRES","URL","searchByName","name","dispatch","data","get","type","payload","error","message","getAllGames","then","response","gameDetail","idVideogame","res","game","clear","postGame","post","window","alert","form","getAllGenres","ordenName","ordenByName","ordenRating","ordenByRating","ordenCreation","ordenGenres","ordenGenre"],"sources":["C:/Users/Diego Suescun/Documents/PROGRAMACION WEB/PI/PI-Videogames-main/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { ERROR, GET_GAMES, GET_GAME_NAME, POST_GAME, GAME_DETAIL, GET_GENRES, CLEAR, ORDEN, RATING, CREATION, GENRES } from './types';\r\nconst URL = 'http://localhost:3001';\r\n\r\nexport const searchByName = (name) =>{\r\n    return async (dispatch) =>{\r\n        try {\r\n            const { data } = await axios.get(`${URL}/videogames?name=${name}`)\r\n            return dispatch({\r\n                type: GET_GAME_NAME,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: ERROR,\r\n                payload: error.message\r\n            })\r\n        }\r\n    };\r\n};\r\n\r\nexport const getAllGames =() =>{\r\n    return async (dispatch) =>{\r\n        try {\r\n            await axios.get(`${URL}/videogames`)\r\n            .then((response) => { \r\n                return dispatch({\r\n                    type:GET_GAMES,\r\n                    payload: response.data\r\n                })\r\n            })\r\n        } catch (error) {\r\n            return dispatch ({\r\n                type: ERROR,\r\n                payload: error.message\r\n            })\r\n        }\r\n    }\r\n};\r\n\r\nexport const gameDetail = (idVideogame) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${URL}/videogames/${idVideogame}`);\r\n            const game = res.data;\r\n            return dispatch({ type: GAME_DETAIL, payload: game})\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: ERROR,\r\n                payload: error.message\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const clear = () => {\r\n    return { type: CLEAR}\r\n};\r\n\r\nexport const postGame = (game) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(`${URL}/videogames`, game);\r\n            window.alert('Fue Creado exitosamente su game', form.name);\r\n            return dispatch({\r\n                type: POST_GAME,\r\n                payload: res\r\n            })\r\n        } catch (error) {\r\n            window.alert('No pudo ser creado su juego', game);\r\n            return dispatch({\r\n                type: ERROR,\r\n                payload: error.message\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllGenres = () =>{\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios.get(`${URL}/genres`);\r\n            return dispatch({\r\n                 type: GET_GENRES,\r\n                 payload: data\r\n            })\r\n        } catch (error) {\r\n            return dispatch ({\r\n                type: ERROR,\r\n                payload: error.message\r\n            })\r\n        }\r\n    }\r\n};\r\n\r\nexport const ordenName = (ordenByName) =>{\r\n    return {\r\n         type: ORDEN,\r\n         payload: ordenByName\r\n    }\r\n};\r\n\r\nexport const ordenRating = (ordenByRating) =>{\r\n    return{\r\n        type: RATING,\r\n        payload: ordenByRating\r\n    }\r\n};\r\n\r\nexport const ordenCreation = (ordenCreation) =>{\r\n    return{\r\n        type:CREATION,\r\n        payload: ordenCreation\r\n    }\r\n};\r\n\r\n\r\nexport const ordenGenres = (ordenGenre) => {\r\n    return{\r\n        type: GENRES,\r\n        payload: ordenGenre\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}